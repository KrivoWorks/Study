"Use strict"; // директива необходимая для объявления современного режима JS

//ПЕРЕМЕННЫЕ
// переменная, имя переменной, знак присваивания = значение, в конце ;
let number = 2;
const lowerCamelCase = 5;
// lowerCamelCase - стиль написания "CamelCase"
// переменные в разном регистре - это разные переменные
// значение переменной let может измениться в отличии от const
// но прямых констант в JS не бывает
// let и const используются после объявления

//ТИПЫ ДАННЫХ
// типы данных можно разделить на 2 категории: простые типы (Примитивы) и Объекты (Комплексные)

// простые типы: Числа, Строки, Boolean, Null, Undefined, Symbol, BigInt
const testOne = 2; // числовой тип данных
const testTwo = 4.8; // числа могут как целые так и дробные
const testThree = "Roman"; // строка всегда пишется в кавычках
const testFour = "5"; // число записанное в кавычках - будет строкой
const testFive = true; // булиновое значение - true/false
console.log(testSix); // Ошибка типа данных Null (NAN) - ошибка ссылочного типа
// мы ссылаемся на несуществующую переменную
const testSeven; // ошибка Undefined - пустое значение

// объекты можно разделить на 2 категории: Специальные объекты, Обычные объекты
// специальные объекты: Массивы, Функции, Объекты даты, Регулярные выражения, Ошибки
// объект - это структура для хранения данных (свойств объекта)
const testEight = {
    name: "Roman", // name - свойство (ключ), "Roman" - метод объекта (значение)
    age: 29, // свойство и метод разделяются :
    isMarried: true
};
console.log(testEight.name); // через . можем обратиться к свойству объекта
console.log(testEight["name"]); 
// массив - это частный случай объекта, а не отдельный тип данных
// в массиве элементы идут строго по порядку
const testNine = ["plum.png", "orange.jpg", 6, "apple.bmp", {}, []];
console.log(testNine[1]); // нумерация в ЯП начинается с 0
// ключ в объекте - это свойство, а в массиве - номер