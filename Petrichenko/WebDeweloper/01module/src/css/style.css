/* CSS как и HTML не являются языками программирования */
@import 'css/buttons.css';
/* вариант подключения файла css к текущему файлу */
/* так можно объединить несколько файлов в один большой и его подключить */

/* CSS селектор */
/* селектор - это то по какому параметру или свойству можем обратиться к элементу на странице */
/* к селекторам могут относиться классы, id, дата атрибуты и вложенность всего этого*/
/* id должен быть только один на странице */
selector {
    color: red; /* свойство: значение */
}

/* Вложенность */
selector a { /* обращаемся к ссылке, тег a */
    color: red; /* свойство: значение */
    color: #ff33aa; /* HEX формат */
    color: rgb(122, 145, 001); /* RGB формат */
    color: rgba(122, 145, 001, 0.5); /* a - альфа канал */
}

* { /* селектор для всего на странице */
    box-sizing: border-box; /* описание ниже - блочная модель документа*/
}

h2 {
    color: red;
    text-align: center; /* выровнять текст по центру */
    font-style: italic; /* текст курсивом */
    /* text-decoration: underline; подчёркнутый текст */
    /* text-decoration: line-through; зачёркнутый текст */
    font-size: 30px; /* размер текста */
    /* stext-transform: uppercase; текст в верхнем регистре */
    /* text-transform: lowercase; текст в нижнем регистре */
}

/* ранее в html записали теги делающие все эти действия */
/* сейчас хорошим тоном считается использование css стилей */
/* выделять текст в html можно через тег <span> */

#begin {
    font-weight: normal; /* жирность текста */
}

/* =================================================================== */

/* Блочная модель документа */
/* Все элементы на странице имеют прямоугольную форму */
/* даже круги и овалы - это модифицированные прямоугольники */
/* как у любого прямоугольника у него есть две главнфе величины, это ширина и высота */

.box {
    width: 300px;
    height: 300px;
    background-color: green;
    /* отступы внутри бокса */
    padding: 20px 50px; /* первая часть отвечает за вертикальные отступы, а вторая за горизонтальные */
    /* padding: 20px 50px 40px 15px; - свойства идут по часовой начиная сверху*/
    /* border-width: 3px; - толщина границы */
    /* border-style: solid; - сплошная неприрывная линия */
    /* border-color: black; - цвет */
    border: 3px solid black; /* комбинированное свойство */
    margin: 20px; /* внешние отступы */
}

/* все элементы на странице делятся на 3 вида по своей структуре */
/* БЛОЧНЫЕ */
/* СТРОЧНЫЕ */
/* СТРОЧНО-БЛОЧНЫЕ */

/* блочные */
/* блочные элементы на странице формируют каркас страницы, те разделение его на области */
/* каждый блочный элемент захватывает всю область по ширине - margin */
/* если не указать ширину блока, он захватит всю ширину которая ему доступна */
/* если убрать заданную высоту блока он сожмётся по высоте и оставит только padding */
/* в консоле разработчика можно посмотреть стиль элемента заданный по умолчанию */
/* user agent stylesheet - display: block; */
/* таким образом можно узнать блочный это элемент или стройчный, или строчно-блочный */

/* если посмотреть на элемент через инспектор, обнаружим размер 346х346 */
/* а заданный размер в CSS правиле 300х300 пикселей */
/* это происходит потому-что элемент объединяет в себе и паддинг и бордер и марджин */
/* но в реальных проктах мы часто хотим, чтобы блок занимал задаваемый размер */
/* для исправления этой ситуации есть свойство box-sizing */
/* именно его нужно устанавливать для элементов, чтобы поменялось это поведение */
/* у него всего два свойства - border-box и стандартное поведение content-box */
/* чаще всего это свойство указывается в самом начале для всего * */

/* строчные */
/* когда структура есть, нужно сайт чем то наполнить, этим занимаюся строчные элементы */
/* они нужны для наполнения сайта. Классический пример это ссылка, тег a */
/* в инспекторе во вкладке Computed есть свойство display со значением inline */
/* строчные элементы занимают столько места, сколько в них контента, в отличии от блочных элементов */

a {
    padding: 20px; /* если проверим, паддинги работают */
    margin: 20px; /* а марджин появился только слева и справа это особенность строчных элементов */
    width: 500px; /* как стиль ширина применится но ничего не поменяется */
    /* строчные элементы не реагируют на свойство ширины */
    /* потому что занимают столько ширины сколько в них есть контента */
    /* картинка в ссылке встанут в одну строку, картинки в html это тоже строчные элементы */
    /* у блочного элемента можно в ручную изменить значение display */
    /* так и ссылку можно превратить в блок, который будет вести себя как блок */
}

/* тег p параграф - является блочным элементом */

/* строчно-блочные элементы */


bb { /* это комбинация блочных и строчных элементов, */
    display: inline-block; /* только они взяли самое лучшее из блочных и лучшее из строчных элементов */
}
/* от блочных они взяли все параметры которые есть в блочной модели css */
/* теперь к строчно-блочным элементам можно применять margin и padding */
/* а от строчных они взяли расположение в одной строке */

img {
    display: block; /* картинка и ссылка будут друг на другом а не в линию */
    /* выравниваем картинку по горизонтали */
    margin: 0 auto; /* ставим внешние оступы по вертикали 0 а по горизонтали авто */
    /* картинка встаёт по середине страницы */
    /* но выровнять картинку таким способом по горизонтали не получится */
    width: 500px;
}

/* =================================================================== */