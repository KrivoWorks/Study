/* Псевдоклассы и псевдоэлементы CSS */
/* в процессе развития создания сайтов, появлялись новые требования */
/* например для взаимодействия пользователя с элементами */
/* чтобы элементы отвечали им при наведении */
/* или некоторые элементы интерфейса были созданы с помощью css */
/* например кружочки - это не вырезанные картинки а созданные элементы */

* {
	box-sizing: border-box;
}

button {
	width: 250px;
	height: 50px;
	background-color: #ffe66b;
	border: none;
	cursor: pointer;
	outline: none; /* убрать синюю обводку */
}

.circle {
	width: 50px;
	height: 50px;
	background-color: green;
	border-radius: 100%;
	margin-top: 10px;
}

/* при наведении на кнопку она должна поменять цвет */
/* при использовании псевдокласса можно использовать : или :: */
button:hover { /* в sass синтаксис - &:hover */
	background-color: pink;
	color: chocolate;
}

/* сейчас при наведении анимация происходит мгновенно */
button {
	transition: 0.5s all; /* время изменения анимации, к какому свойству применимо */
}

/* элемент будет меняться в активном состоянии */
button:active {
	background-color: darkgreen;
} /* теперь если нажать, на момент нажатия и удержания кнопки, она меняет цвет */

/* часть элементов не имеют активного состояния, например с дивом нет */
/* из этого правила выходит следующий псевдокласс - :focus */
button:focus {
	background-color: grey;
} /* если нажать на кнопку она станет серой после нажатия */
/* если нажать клавишу TAB - фокус сойдёт */

/* =================================================================== */

/* сделаем каждый второй элемент был покрашен в красный цвет */
.circle:nth-child(2n) { /* 2n - Все чётные элементы */
	background-color: red;
} /* если вместо 2n поставить 1 - :first-child - первый элемент */

/* =================================================================== */

/* Псевдоэлементы */
/* на практике чаще всего используются ::after и ::before */
/* псевдоэлементы - элементы которые не до конца настоящие */

/* например в нашей вёрстке есть маленькие плюсики - картинки в кружке */
/* при создании веб структуры, каркаса - он каждый раз обращается к этой картинке */
/* создаётся простой запрос, html запрашивает у сервера картинку */
/* по правилам хорошей вёрстки - чем меньше таких запросов, тем лучше */

/* ::after - помещает элемент/контент после элемента */
/* ::before - помещает элемент/контент перед элементом */
.circle::before {
	content: '1'; /* перед каждым кружочкам появилась 1 */
	/* при использовании before или after использование content обязательно */
	content: ''; /* оставим значение пустым */
	display: block;
	height: 2px;
	width: 0%;
	background-color: #000;
} /* теперь простая геометрическая фигура создана перед элементом */
/* этим элементам мы также можем указать позиционирование, например абсолютное */
/* как псевдоэлементы мы можем помещать даже картинки */

/* можно комбинировать псевдоклассы и псевдоэлементы */
.circle::before {
	content: '';
	display: block;
	height: 2px;
	width: 0%;
	background-color: #000;
}
/* когда мы наведём на элемент будет создан элмент before */
.circle:hover.circle::before {
	width: 100%;
}


/* добавим анимацию полоске */
.circle {
	width: 50px;
	height: 50px;
	background-color: green;
	border-radius: 100%;
	margin-top: 10px;
}
.circle::before {
	content: '';
	display: block;
	height: 2px;
	width: 0%;
	background-color: #000;
	transition: 0.5s all;
}
.circle:hover.circle::before {
	width: 100%;
}

/* синтаксис в sass */
/* 
.circle
	width: 50px
	height: 50px
	background-color: green
	border-radius: 100%
	margin-top: 10px
	&::before
		content: ''
		display: block
		height: 2px
		width: 0%
		background-color: #000
		transition: 0.5s all
	&:hover
		&::before
			width: 100%
*/